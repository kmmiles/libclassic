import CalcOpts from '../interface/CalcOpts';
import Settings from '../interface/Settings';
import ManaRegen from '../interface/ManaRegen';
import CommonNumberResult from '../interface/CommonNumberResult';
import CommonStringResult from '../interface/CommonStringResult';
import CastDmgObject from '../interface/CastDmgObject';
import CastDmgValues from '../interface/CastDmgValues';
import GearSlot from '../enum/GearSlot';
import GearItemClass from '../enum/GearItemClass';
import GearItemQuality from '../enum/GearItemQuality';
import GearItemSuffixType from '../enum/GearItemSuffixType';
import GearItemBonusType from '../enum/GearItemBonusType';
import ArmorSubclass from '../enum/ArmorSubclass';
import WeaponSubclass from '../enum/WeaponSubclass';
import ItemSlot from '../enum/ItemSlot';
import Raid from '../enum/Raid';
import WorldBoss from '../enum/WorldBoss';
import Buff from '../enum/Buff';
import Faction from '../enum/Faction';
import Gender from '../enum/Gender';
import MagicSchool from '../enum/MagicSchool';
import PlayableClass from '../enum/PlayableClass';
import PlayableRace from '../enum/PlayableRace';
import PlayableSpec from '../enum/PlayableSpec';
import PowerType from '../enum/PowerType';
import PvPRank from '../enum/PvPRank';
import SortOrder from '../enum/SortOrder';
import SpellCritFromIntellectDivisor from '../enum/SpellCritFromIntellectDivisor';
import TargetType from '../enum/TargetType';
declare const _default: {
    ArmorSubclass: typeof ArmorSubclass;
    Buff: typeof Buff;
    Faction: typeof Faction;
    Gender: typeof Gender;
    GearItemClass: typeof GearItemClass;
    GearItemQuality: typeof GearItemQuality;
    ItemSlot: typeof ItemSlot;
    MagicSchool: typeof MagicSchool;
    PlayableClass: typeof PlayableClass;
    PlayableRace: typeof PlayableRace;
    PowerType: typeof PowerType;
    PvPRank: typeof PvPRank;
    SortOrder: typeof SortOrder;
    SpellCritFromIntellectDivisor: typeof SpellCritFromIntellectDivisor;
    TargetType: typeof TargetType;
    WeaponSubclass: typeof WeaponSubclass;
    GearItemSuffixType: typeof GearItemSuffixType;
    Raid: typeof Raid;
    WorldBoss: typeof WorldBoss;
    factionFromRace: (race: PlayableRace) => Faction;
    gearSlotFromText: (text: string) => GearSlot;
    gearSlotFromItemSlot: (itemSlot: ItemSlot) => GearSlot;
    raidFromText: (text: string) => Raid;
    raidsFromText: (text: string) => Raid[];
    worldBossFromText: (text: string) => WorldBoss;
    worldBossesFromText: (text: string) => WorldBoss[];
    pvpRankFromText: (text: string) => PvPRank;
    playableRaceFromText: (text: string) => PlayableRace;
    playableClassFromText: (text: string) => PlayableClass;
    playableClassesFromText: (text: string) => PlayableClass[];
    gearItemBaseName: (itemName: string) => string;
    gearItemBonusTypeFromText: (text: string) => GearItemBonusType;
    gearItemSuffixTypeFromText: (text: string) => GearItemSuffixType;
    gearItemQualityFromText: (text: string) => GearItemQuality;
    buffFromText: (text: string) => Buff;
    buffsFromText: (text: string) => Buff[];
    buffMaskFromText: (text: string) => number;
    buffMaskIncludes: (buffMask: number, buff: Buff) => boolean;
    globalCooldown: number;
    playerLevelCap: number;
    baseSpellCrit: number;
    baseSpellCritMultiplier: number;
    spellHitCap: number;
    spellCritCap: number;
    defaultSettings: (opts?: {
        playerSpec: PlayableSpec;
    } | undefined) => Settings;
    calcOptsFromSettings: (s: Settings) => CalcOpts;
    commonNumberResultFromDefault: () => CommonNumberResult;
    commonStringResultFromDefault: () => CommonStringResult;
    castDmgValuesFromDefault: () => CastDmgValues;
    castDmgObjectFromDefault: () => CastDmgObject;
    spellChanceToHit: (targetLevel: number, spellHit: number, opts?: CalcOpts | undefined) => number;
    spellChanceToMiss: (targetLevel: number, spellHit: number, opts?: CalcOpts | undefined) => number;
    spellChanceToCrit: (targetLevel: number, spellHit: number, spellCrit: number, opts?: CalcOpts | undefined) => number;
    spellChanceToNormal: (targetLevel: number, spellHit: number, spellCrit: number, opts?: CalcOpts | undefined) => number;
    spellPartialResistAvg: (playerLevel: number, playerSpellPenetration: number, targetLevel: number, targetBaseSpellResistance: number, binarySpell: boolean) => number;
    spellCritBonusMultiplier: (opts?: CalcOpts | undefined) => number;
    spellCritMultiplier: (opts?: CalcOpts | undefined) => number;
    spellDmgMultiplier: (spellName: string, additionalMultipliers: number, opts?: CalcOpts | undefined) => CommonNumberResult;
    spellDmgBase: (spellName: string, dmg: number, opts?: CalcOpts | undefined) => number;
    spellBaseChanceToHit: (targetLevel: number, opts?: CalcOpts | undefined) => 83 | 94 | 95 | 96 | 97 | 98 | 99;
    playerManaRegen: (playerLevel: number, playerSpirit: number, playerMp5: number, opts?: CalcOpts | undefined) => ManaRegen;
    targetSpellResistanceFromLevel: (playerLevel: number, targetLevel: number, binarySpell: boolean) => number;
    targetSpellResistance: (playerLevel: number, playerSpellPenetration: number, targetLevel: number, targetBaseSpellResistance: number, binarySpell: boolean) => number;
};
export default _default;
